{"version":3,"sources":["components/Song/Song.js","components/playing_card/MusicPlayerCard.js","App.js","reportWebVitals.js","index.js"],"names":["audios","src","title","author","img","MusicPlayerCard","useState","song","index","setIndex","calTimer","time","min","Math","floor","sec","round","currentTime","setCurrentTime","intervalRef","useRef","lengthTime","setLenghTime","isPlay","setIsPlay","isRepeat","setIsRepeat","isRandom","setIsRandom","width","setWidth","style","clickedStyle","color","notClickedStyle","audio","setAudio","songID","setSongID","clickCard","numb","document","getElementById","Audio","undefined","pause","load","play","current","setInterval","creaseNum","pauseclick","length","clearInterval","useEffect","random","scrollIntoView","behavior","block","onloadedmetadata","duration","className","map","item","backgroundImage","id","onClick","onMouseUp","e","target","value","slide","onBlur","defaultValue","type","max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.babba36d.chunk.js","sourcesContent":["\r\nconst  audios=[\r\n    {\r\n        src:'song/aplacetocallhome.mp3',\r\n        title: 'A Place To Call Home',\r\n        author:'Violet Evergarden OST',\r\n        img:'image/img1.jpg'\r\n    },\r\n    {\r\n        src:'song/atownwithanoceanview.mp3',\r\n        title: 'A Town With An Ocean View',\r\n        author:'Ghibli OST',\r\n        img:'image/img2.jpg'\r\n    },\r\n    {\r\n        src:'song/fiction.mp3',\r\n        title: 'Fiction',\r\n        author:'Unknown',\r\n        img:'image/img3.jpg'\r\n    },\r\n    {\r\n        src:'song/firstdate.mp3',\r\n        title: 'First Date',\r\n        author:'Frad',\r\n        img:'image/img4.jpg'\r\n    },\r\n    {\r\n        src:'song/illbefine.mp3',\r\n        title: 'I Will Be Fine ',\r\n        author:'WYS',\r\n        img:'image/img5.jpg'\r\n    },\r\n    {\r\n        src:'song/kiminonawa.mp3',\r\n        title: 'Kimi No Nawa',\r\n        author:'Your Name OST',\r\n        img:'image/img6.jpg'\r\n    },\r\n    {\r\n        src:'song/latenight.mp3',\r\n        title: 'Late Night',\r\n        author:'Melancholy',\r\n        img:'image/img7.jpg'\r\n    },\r\n    {\r\n        src:'song/raingardenofwords.mp3',\r\n        title: 'Rain',\r\n        author:'Garden of Words OST',\r\n        img:'image/img8.jpg'\r\n    },\r\n    {\r\n        src:'song/refrain.mp3',\r\n        title: 'Refrain',\r\n        author:'Anan Ryoko',\r\n        img:'image/img9.jpg'\r\n    },\r\n    {\r\n        src:'song/thelongnight.mp3',\r\n        title: 'The Long Night',\r\n        author:'Violet Evergarden OST',\r\n        img:'image/img10.jpg'\r\n    },\r\n    {\r\n        src:'song/thevoiceinmyheart.mp3',\r\n        title: 'The Voice In My Heart',\r\n        author:'Violet Evergarden OST',\r\n        img:'image/img11.jpg'\r\n    },\r\n    {\r\n        src:'song/whileyouwereaway.mp3',\r\n        title: 'While You Were Away',\r\n        author:'Frad',\r\n        img:'image/img12.jpg'\r\n    }\r\n];\r\nexport default audios;\r\n\r\n","import React,{useState,useEffect,useRef} from 'react'\r\nimport './MusicPlayerCard.scss'\r\nimport audios from \"../Song/Song\";\r\nimport {AiFillPauseCircle, AiFillPlayCircle, BiSkipNext, BiSkipPrevious, FaRandom, FiRepeat} from \"react-icons/all\";\r\nconst MusicPlayerCard =()=>{\r\n    const [song]=useState(audios)\r\n    const [index,setIndex]=useState([]);\r\n    function calTimer(time){\r\n        let min=Math.floor(time/60)\r\n        let sec=Math.round(time%60)\r\n        if(sec<10) sec='0'+sec\r\n        return `${min}:${sec}`\r\n\r\n    }\r\n    const[currentTime, setCurrentTime]=useState(0);\r\n    const intervalRef=useRef()\r\n    const [changeTime,setChangeTime]=useState('0:00');\r\n    const [lengthTime,setLenghTime]=useState([calTimer(0),0]);\r\n    const [isPlay,setIsPlay]=useState(false)\r\n    const[isRepeat,setIsRepeat]=useState(false)\r\n    const[isRandom,setIsRandom]=useState(false)\r\n    const[width,setWidth]=useState(0)\r\n    let style={\r\n        width: `${width}%`\r\n    }\r\n    let clickedStyle={color:'#ef1e21'}\r\n    let notClickedStyle={color:'#cccccc'}\r\n    const [audio,setAudio]=useState()\r\n    const [songID,setSongID]=useState()\r\n    function clickCard(numb) {\r\n        setCurrentTime(0)\r\n        setSongID(document.getElementById(`song_${index}`))\r\n        if (index!==numb){\r\n            setIndex(numb);\r\n            setAudio(new Audio(song[numb].src))\r\n            if (audio!=undefined) {\r\n                stop()\r\n            }\r\n        }\r\n        else {\r\n            if (audio!=undefined){\r\n                audio.load()\r\n                audio.play()\r\n            }\r\n        }\r\n    }     // change song\r\n    function play(){\r\n        setCurrentTime( audio.currentTime)\r\n        intervalRef.current = setInterval(creaseNum, 1000);\r\n        audio.play()\r\n    }\r\n    function stop() {\r\n        audio.currentTime=0\r\n        audio.pause()\r\n    }\r\n    function pause(){\r\n        clearInterval(intervalRef.current)\r\n        audio.pause()\r\n    }\r\n    function skipnext(){\r\n        if(isPlay){\r\n            if(!isRandom){\r\n                if (index<11)clickCard(index+1)\r\n            }\r\n            else clickCard(Math.floor(Math.random()*11))\r\n        }\r\n    }\r\n    function skipprev(){\r\n        if(isPlay){\r\n            if(!isRandom){\r\n                if (index>0 ) clickCard(index-1)\r\n            }\r\n            else clickCard(Math.floor(Math.random()*11))\r\n        }\r\n    }\r\n    function playclick(){\r\n        if(index.length!=0){setIsPlay(!isPlay);play()}\r\n        else {\r\n            clickCard(Math.floor(Math.random()*11))\r\n        }\r\n    }\r\n    function pauseclick(){\r\n        if (index.length!=0){setIsPlay(!isPlay);pause();}\r\n    }\r\n    const creaseNum=()=>setCurrentTime(currentTime=>currentTime+1)\r\n    useEffect(()=>{\r\n        intervalRef.current=setInterval(creaseNum,1000)\r\n        return () => clearInterval(intervalRef.current);\r\n    },[])\r\n    function slide(e){\r\n        if(isPlay){\r\n            if(audio!=undefined){\r\n                audio.pause()\r\n                clearInterval(intervalRef.current)\r\n                setCurrentTime(e.target.value)\r\n                audio.currentTime=e.target.value\r\n                play()\r\n            }\r\n        }\r\n    }\r\n    useEffect(\r\n        ()=>{\r\n            if(isPlay==true){\r\n                setWidth(currentTime/lengthTime[1]*100)\r\n                if (currentTime>lengthTime[1]){\r\n                    if(!isRandom && !isRepeat) if(index<12) clickCard(index+1)\r\n                    if(isRandom) clickCard(Math.floor(Math.random()*11))\r\n                    if(isRepeat) clickCard(index)\r\n\r\n                }\r\n                else {\r\n\r\n                    }\r\n            }\r\n        },[currentTime]\r\n    )\r\n    useEffect(\r\n        ()=>{\r\n            if (audio!=undefined){\r\n                audio.load()\r\n                audio.play();\r\n                setIsPlay(true);\r\n                }\r\n        }\r\n    ,[index])\r\n    useEffect(\r\n        ()=>{if (audio!=undefined) {\r\n            if(songID!=null || songID!=undefined){\r\n                document.getElementById(`song_${index}`).scrollIntoView({behavior:'smooth',block:'center'})\r\n            }\r\n            audio.onloadedmetadata= function () {\r\n                setCurrentTime(0)\r\n                setLenghTime([calTimer(audio.duration),audio.duration])}\r\n        }}\r\n    ,[audio])\r\n    useEffect(\r\n        ()=>{\r\n            if(isRandom==true) setIsRepeat(false)\r\n        },[isRandom]\r\n    )\r\n    useEffect(\r\n        ()=>{\r\n            if(isRepeat==true) setIsRandom(false)\r\n        },[isRepeat]\r\n    )\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"songs-wrapper\">\r\n                    <div className=\"row\">\r\n                        {song.map((item,numb)=>\r\n                            <div className=\"col s12 m6 l4 x3\">\r\n                                <div className={`${index}`==`${numb}`?`playing-song song `:`song`}>\r\n                                    <div className=\"song-image\" style={{backgroundImage:`url(${item.img})`}}></div>\r\n                                    <div className=\"song-info\">\r\n                                        <div id={`song_${numb}`} onClick={()=>{clickCard(numb)}} className=\"song-title\">{item.title}</div>\r\n                                        <div onClick={()=>{clickCard(numb)}} className=\"song-artist\">{item.author}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='music-controller'>\r\n                <div className='red-line' style={style}></div>\r\n                <div className='ranger-slider'>\r\n                    <input\r\n                            onMouseUp={(e)=>{slide(e)}}\r\n                            onBlur={(e)=>{e.target.defaultValue=currentTime}}\r\n                          type=\"range\" min='0' max={lengthTime[1]}  className=\"slider\" id=\"myRange\"/>\r\n                </div>\r\n                <div className='timer flex justify-center'>\r\n                    <div className='timer-current'>{`${index}`?`${calTimer(currentTime)}`:`0:00`}</div>\r\n                    <div className='current-song '>{`${index}`?`${song[index].title}`:``}</div>\r\n                    <div className=\"timer-length\">{`${index}`?`${lengthTime[0]}`:`0:00`}</div>\r\n                </div>\r\n                <div className='play-controller flex justify-center'>\r\n                    <BiSkipPrevious onClick={()=>skipprev()}  className='skip-btn prev-btn bottom-2 text-5xl flex-initial' />\r\n                    {isPlay==false\r\n                        ? <AiFillPlayCircle onClick={()=>playclick()} className='  play-btn    text-5xl flex-initial'/>\r\n                        : <AiFillPauseCircle onClick={()=>pauseclick()} className='  play-btn    text-5xl flex-initial'/>}\r\n                    <BiSkipNext onClick={()=>skipnext()} className='skip-btn next-btn text-5xl flex-initial' />\r\n                </div>\r\n                <div className='other-btn my-auto text-xl flex justify-center'>\r\n                    <FaRandom onClick={()=>setIsRandom(!isRandom)} className='random-btn  m-2 ' style={isRandom  ?  clickedStyle : notClickedStyle}/>\r\n                    <FiRepeat onClick={()=>setIsRepeat(!isRepeat)} className='repeat-btn  m-2  ' style={isRepeat ? clickedStyle : notClickedStyle}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MusicPlayerCard","import './App.scss';\n\nimport MusicPlayerCard from \"./components/playing_card/MusicPlayerCard\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MusicPlayerCard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}